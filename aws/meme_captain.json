{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "elb": {
      "DependsOn": "internetGatewayAttachment",
      "Properties": {
        "HealthCheck": {
          "HealthyThreshold": "10",
          "Interval": "30",
          "Target": "HTTP:80/",
          "Timeout": "5",
          "UnhealthyThreshold": "2"
        },
        "Listeners": [
          {
            "InstancePort": "80",
            "LoadBalancerPort": "80",
            "Protocol": "HTTP"
          }
        ],
        "SecurityGroups": [
          {
            "Ref": "webSecurityGroup"
          }
        ],
        "Subnets": [
          {
            "Ref": "publicSubnet1"
          },
          {
            "Ref": "publicSubnet2"
          }
        ]
      },
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer"
    },
    "internetGateway": {
      "Type": "AWS::EC2::InternetGateway"
    },
    "internetGatewayAttachment": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "internetGateway"
        },
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::VPCGatewayAttachment"
    },
    "internetGatewayRoute": {
      "DependsOn": "internetGatewayAttachment",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "internetGateway"
        },
        "RouteTableId": {
          "Ref": "internetGatewayRouteTable"
        }
      },
      "Type": "AWS::EC2::Route"
    },
    "internetGatewayRouteTable": {
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::RouteTable"
    },
    "launchConfig": {
      "Properties": {
        "ImageId": "ami-1ecae776",
        "InstanceType": "t2.micro",
        "KeyName": "memecaptain",
        "SecurityGroups": [
          {
            "Ref": "webSecurityGroup"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                "#!/bin/sh",
                "curl --retry 60 --retry-delay 5 google.com",
                "yum update -y",
                "yum install -y docker",
                "service docker start",
                "docker pull mm62/meme-captain-web",
                "docker run --privileged=true -d -p 80:6081 mm62/meme-captain-web"
              ]
            ]
          }
        }
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration"
    },
    "natInstance": {
      "DependsOn": "internetGatewayAttachment",
      "Properties": {
        "ImageId": "ami-184dc970",
        "InstanceType": "t2.micro",
        "KeyName": "memecaptain",
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "GroupSet": [
              {
                "Ref": "natSecurityGroup"
              }
            ],
            "SubnetId": {
              "Ref": "publicSubnet1"
            }
          }
        ],
        "SourceDestCheck": "false"
      },
      "Type": "AWS::EC2::Instance"
    },
    "natRoute": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "InstanceId": {
          "Ref": "natInstance"
        },
        "RouteTableId": {
          "Ref": "natRouteTable"
        }
      },
      "Type": "AWS::EC2::Route"
    },
    "natRouteTable": {
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::RouteTable"
    },
    "natSecurityGroup": {
      "Properties": {
        "GroupDescription": "nat security group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "80",
            "IpProtocol": "tcp",
            "ToPort": "80"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "443",
            "IpProtocol": "tcp",
            "ToPort": "443"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.0.2.0/24",
            "FromPort": "80",
            "IpProtocol": "tcp",
            "ToPort": "80"
          },
          {
            "CidrIp": "10.0.2.0/24",
            "FromPort": "443",
            "IpProtocol": "tcp",
            "ToPort": "443"
          },
          {
            "CidrIp": "10.0.3.0/24",
            "FromPort": "80",
            "IpProtocol": "tcp",
            "ToPort": "80"
          },
          {
            "CidrIp": "10.0.3.0/24",
            "FromPort": "443",
            "IpProtocol": "tcp",
            "ToPort": "443"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "nat"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "onDemand": {
      "Properties": {
        "LaunchConfigurationName": {
          "Ref": "launchConfig"
        },
        "LoadBalancerNames": [
          {
            "Ref": "elb"
          }
        ],
        "MaxSize": "1",
        "MinSize": "1",
        "VPCZoneIdentifier": [
          {
            "Ref": "privateSubnet1"
          }
        ]
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup"
    },
    "privateSubnet1": {
      "Properties": {
        "AvailabilityZone": "us-east-1a",
        "CidrBlock": "10.0.2.0/24",
        "Tags": [
          {
            "Key": "Name",
            "Value": "private1"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "privateSubnet1RouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "natRouteTable"
        },
        "SubnetId": {
          "Ref": "privateSubnet1"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "privateSubnet2": {
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "CidrBlock": "10.0.3.0/24",
        "Tags": [
          {
            "Key": "Name",
            "Value": "private2"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "privateSubnet2RouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "natRouteTable"
        },
        "SubnetId": {
          "Ref": "privateSubnet2"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "publicSubnet1": {
      "Properties": {
        "AvailabilityZone": "us-east-1a",
        "CidrBlock": "10.0.0.0/24",
        "Tags": [
          {
            "Key": "Name",
            "Value": "public1"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "publicSubnet1RouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "internetGatewayRouteTable"
        },
        "SubnetId": {
          "Ref": "publicSubnet1"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "publicSubnet2": {
      "Properties": {
        "AvailabilityZone": "us-east-1b",
        "CidrBlock": "10.0.1.0/24",
        "Tags": [
          {
            "Key": "Name",
            "Value": "public2"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "publicSubnet2RouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "internetGatewayRouteTable"
        },
        "SubnetId": {
          "Ref": "publicSubnet2"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "vpc": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "Tags": [
          {
            "Key": "Name",
            "Value": "memecaptain"
          }
        ]
      },
      "Type": "AWS::EC2::VPC"
    },
    "webSecurityGroup": {
      "Properties": {
        "GroupDescription": "web security group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "1",
            "IpProtocol": "tcp",
            "ToPort": "65535"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "80",
            "IpProtocol": "tcp",
            "ToPort": "80"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "web"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    }
  }
}
