{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Outputs": {
    "dbHost": {
      "Value": {
        "Fn::GetAtt": [
          "db",
          "Endpoint.Address"
        ]
      }
    }
  },
  "Parameters": {
    "canaryMaxSize": {
      "Type": "Number"
    },
    "canaryMinSize": {
      "Type": "Number"
    },
    "dbPassword": {
      "NoEcho": "TRUE",
      "Type": "String"
    },
    "dbUser": {
      "Type": "String"
    },
    "onDemandMaxSize": {
      "Type": "Number"
    },
    "onDemandMinSize": {
      "Type": "Number"
    }
  },
  "Resources": {
    "canaryAutoScalingGroup": {
      "Properties": {
        "HealthCheckGracePeriod": 600,
        "HealthCheckType": "ELB",
        "LaunchConfigurationName": {
          "Ref": "canaryLaunchConfig"
        },
        "LoadBalancerNames": [
          {
            "Ref": "elb"
          }
        ],
        "MaxSize": {
          "Ref": "canaryMaxSize"
        },
        "MinSize": {
          "Ref": "canaryMinSize"
        },
        "VPCZoneIdentifier": [
          {
            "Ref": "privateSubnet1"
          }
        ]
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {}
      }
    },
    "canaryLaunchConfig": {
      "Properties": {
        "IamInstanceProfile": {
          "Ref": "secretsInstanceProfile"
        },
        "ImageId": "ami-1ecae776",
        "InstanceType": "t2.micro",
        "KeyName": "memecaptain",
        "SecurityGroups": [
          {
            "Ref": "webSecurityGroup"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                "#!/bin/bash",
                "set -e",
                "yum update -y",
                "yum install -y docker",
                "service docker start",
                "docker pull mm62/meme-captain-web",
                "aws s3 cp s3://memecaptain-secrets/database.yml /database.yml",
                "aws s3 cp s3://memecaptain-secrets/env /env",
                "aws s3 sync s3://memecaptain-secrets/fonts /fonts",
                "docker run --env='RAILS_ENV=production' --env-file=/env  --privileged=true --rm -v /database.yml:/app/config/database.yml mm62/meme-captain-web bundle exec rake db:migrate",
                "docker run --env='RAILS_ENV=production' --env-file=/env --privileged=true -d -p 80:6081 -v /database.yml:/app/config/database.yml -v /fonts:/app/fonts mm62/meme-captain-web"
              ]
            ]
          }
        }
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration"
    },
    "db": {
      "DeletionPolicy": "Snapshot",
      "Properties": {
        "AllocatedStorage": "50",
        "AvailabilityZone": "us-east-1d",
        "DBInstanceClass": "db.t2.small",
        "DBName": "memecaptain",
        "DBSubnetGroupName": {
          "Ref": "dbSubnetGroup"
        },
        "Engine": "postgres",
        "MasterUserPassword": {
          "Ref": "dbPassword"
        },
        "MasterUsername": {
          "Ref": "dbUser"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "memecaptain"
          }
        ],
        "VPCSecurityGroups": [
          {
            "Ref": "dbSecurityGroup"
          }
        ]
      },
      "Type": "AWS::RDS::DBInstance"
    },
    "dbSecurityGroup": {
      "Properties": {
        "GroupDescription": "db security group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "1",
            "IpProtocol": "tcp",
            "ToPort": "65535"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "5432",
            "IpProtocol": "tcp",
            "ToPort": "5432"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "db"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "dbSubnetGroup": {
      "Properties": {
        "DBSubnetGroupDescription": "db subnet group",
        "SubnetIds": [
          {
            "Ref": "privateSubnet1"
          },
          {
            "Ref": "privateSubnet2"
          }
        ]
      },
      "Type": "AWS::RDS::DBSubnetGroup"
    },
    "elb": {
      "DependsOn": "internetGatewayAttachment",
      "Properties": {
        "HealthCheck": {
          "HealthyThreshold": "10",
          "Interval": "30",
          "Target": "HTTP:80/",
          "Timeout": "5",
          "UnhealthyThreshold": "2"
        },
        "Listeners": [
          {
            "InstancePort": "80",
            "LoadBalancerPort": "80",
            "Protocol": "HTTP"
          }
        ],
        "SecurityGroups": [
          {
            "Ref": "webSecurityGroup"
          }
        ],
        "Subnets": [
          {
            "Ref": "publicSubnet1"
          },
          {
            "Ref": "publicSubnet2"
          }
        ]
      },
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer"
    },
    "internetGateway": {
      "Type": "AWS::EC2::InternetGateway"
    },
    "internetGatewayAttachment": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "internetGateway"
        },
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::VPCGatewayAttachment"
    },
    "internetGatewayRoute": {
      "DependsOn": "internetGatewayAttachment",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "internetGateway"
        },
        "RouteTableId": {
          "Ref": "internetGatewayRouteTable"
        }
      },
      "Type": "AWS::EC2::Route"
    },
    "internetGatewayRouteTable": {
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::RouteTable"
    },
    "natInstance": {
      "DependsOn": "internetGatewayAttachment",
      "Properties": {
        "ImageId": "ami-184dc970",
        "InstanceType": "t2.micro",
        "KeyName": "memecaptain",
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "GroupSet": [
              {
                "Ref": "natSecurityGroup"
              }
            ],
            "SubnetId": {
              "Ref": "publicSubnet1"
            }
          }
        ],
        "SourceDestCheck": "false"
      },
      "Type": "AWS::EC2::Instance"
    },
    "natRoute": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "InstanceId": {
          "Ref": "natInstance"
        },
        "RouteTableId": {
          "Ref": "natRouteTable"
        }
      },
      "Type": "AWS::EC2::Route"
    },
    "natRouteTable": {
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::RouteTable"
    },
    "natSecurityGroup": {
      "Properties": {
        "GroupDescription": "nat security group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "80",
            "IpProtocol": "tcp",
            "ToPort": "80"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "443",
            "IpProtocol": "tcp",
            "ToPort": "443"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.0.2.0/24",
            "FromPort": "80",
            "IpProtocol": "tcp",
            "ToPort": "80"
          },
          {
            "CidrIp": "10.0.2.0/24",
            "FromPort": "443",
            "IpProtocol": "tcp",
            "ToPort": "443"
          },
          {
            "CidrIp": "10.0.3.0/24",
            "FromPort": "80",
            "IpProtocol": "tcp",
            "ToPort": "80"
          },
          {
            "CidrIp": "10.0.3.0/24",
            "FromPort": "443",
            "IpProtocol": "tcp",
            "ToPort": "443"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "nat"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "onDemandAutoScalingGroup": {
      "Properties": {
        "HealthCheckGracePeriod": 600,
        "HealthCheckType": "ELB",
        "LaunchConfigurationName": {
          "Ref": "onDemandLaunchConfig"
        },
        "LoadBalancerNames": [
          {
            "Ref": "elb"
          }
        ],
        "MaxSize": {
          "Ref": "onDemandMaxSize"
        },
        "MinSize": {
          "Ref": "onDemandMinSize"
        },
        "VPCZoneIdentifier": [
          {
            "Ref": "privateSubnet1"
          }
        ]
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {}
      }
    },
    "onDemandLaunchConfig": {
      "Properties": {
        "IamInstanceProfile": {
          "Ref": "secretsInstanceProfile"
        },
        "ImageId": "ami-1ecae776",
        "InstanceType": "t2.micro",
        "KeyName": "memecaptain",
        "SecurityGroups": [
          {
            "Ref": "webSecurityGroup"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                "#!/bin/bash",
                "set -e",
                "yum update -y",
                "yum install -y docker",
                "service docker start",
                "docker pull mm62/meme-captain-web",
                "aws s3 cp s3://memecaptain-secrets/database.yml /database.yml",
                "aws s3 cp s3://memecaptain-secrets/env /env",
                "aws s3 sync s3://memecaptain-secrets/fonts /fonts",
                "docker run --env='RAILS_ENV=production' --env-file=/env --privileged=true -d -p 80:6081 -v /database.yml:/app/config/database.yml -v /fonts:/app/fonts mm62/meme-captain-web"
              ]
            ]
          }
        }
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration"
    },
    "privateSubnet1": {
      "Properties": {
        "AvailabilityZone": "us-east-1d",
        "CidrBlock": "10.0.2.0/24",
        "Tags": [
          {
            "Key": "Name",
            "Value": "private1"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "privateSubnet1RouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "natRouteTable"
        },
        "SubnetId": {
          "Ref": "privateSubnet1"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "privateSubnet2": {
      "Properties": {
        "AvailabilityZone": "us-east-1e",
        "CidrBlock": "10.0.3.0/24",
        "Tags": [
          {
            "Key": "Name",
            "Value": "private2"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "privateSubnet2RouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "natRouteTable"
        },
        "SubnetId": {
          "Ref": "privateSubnet2"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "publicSubnet1": {
      "Properties": {
        "AvailabilityZone": "us-east-1d",
        "CidrBlock": "10.0.0.0/24",
        "Tags": [
          {
            "Key": "Name",
            "Value": "public1"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "publicSubnet1RouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "internetGatewayRouteTable"
        },
        "SubnetId": {
          "Ref": "publicSubnet1"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "publicSubnet2": {
      "Properties": {
        "AvailabilityZone": "us-east-1e",
        "CidrBlock": "10.0.1.0/24",
        "Tags": [
          {
            "Key": "Name",
            "Value": "public2"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "publicSubnet2RouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "internetGatewayRouteTable"
        },
        "SubnetId": {
          "Ref": "publicSubnet2"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "secretsBucket": {
      "Properties": {
        "AccessControl": "Private",
        "BucketName": "memecaptain-secrets"
      },
      "Type": "AWS::S3::Bucket"
    },
    "secretsInstanceProfile": {
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "secretsRole"
          }
        ]
      },
      "Type": "AWS::IAM::InstanceProfile"
    },
    "secretsRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "s3:ListBucket"
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:s3:::memecaptain-secrets"
                },
                {
                  "Action": [
                    "s3:GetObject"
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:s3:::memecaptain-secrets/*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "secretsPolicy"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "vpc": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "Tags": [
          {
            "Key": "Name",
            "Value": "memecaptain"
          }
        ]
      },
      "Type": "AWS::EC2::VPC"
    },
    "webSecurityGroup": {
      "Properties": {
        "GroupDescription": "web security group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "1",
            "IpProtocol": "tcp",
            "ToPort": "65535"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "80",
            "IpProtocol": "tcp",
            "ToPort": "80"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "web"
          }
        ],
        "VpcId": {
          "Ref": "vpc"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    }
  }
}
