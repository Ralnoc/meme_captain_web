<%
if ENV['JOB_QUEUES'].to_s.empty?
  queues_arg = ''
else
  queues_arg = " --queues=#{ENV['JOB_QUEUES']}"
end
%>
set daemon 120
set logfile /var/log/monit.log
set idfile /var/lib/monit/id
set statefile /var/lib/monit/state
set eventqueue
  basedir /var/lib/monit/events
  slots 100
set alert ops@127.0.0.1
set mailserver 127.0.0.1 port 2525

check process puma
  with pidfile /run/puma.pid
  start program = "/usr/local/bin/puma --config /app/docker/puma_config.rb"
  stop program = "/usr/bin/pkill --pidfile /run/puma.pid"

check process memcache
  with pidfile /run/memcached.pid
  start program = "/etc/init.d/memcached start"
  stop program = "/etc/init.d/memcached stop"

check process varnish
  with pidfile /run/varnishd.pid
  start program = "/etc/init.d/varnish start"
  stop program = "/etc/init.d/varnish stop"
<% 0.upto((ENV['NUM_DELAYED_JOB_WORKERS'] || 1).to_i - 1) do |i| %>
check process delayed_job.<%= i %>
  with pidfile /run/delayed_job.<%= i %>.pid
  start program = "/app/script/delayed_job start --pid-dir=/run --identifier=<%= i %><%= queues_arg %>"
  stop program = "/app/script/delayed_job stop --pid-dir=/run --identifier=<%= i %>"
<% end %>

check process metrics
  with pidfile /run/metrics.pid
  start program = "/sbin/start-stop-daemon --pidfile /run/metrics.pid --start --background --make-pidfile --exec /app/docker/metrics"
  stop program = "/sbin/start-stop-daemon --pidfile /run/metrics.pid --stop --remove-pidfile"

check process mailslack
  with pidfile /run/mailslack.pid
  start program = "/sbin/start-stop-daemon --pidfile /run/mailslack.pid --start --background --make-pidfile --exec /usr/bin/tcpserver 127.0.0.1 2525 /app/docker/mailslack.rb"
  stop program = "/sbin/start-stop-daemon --pidfile /run/mailslack.pid --stop --remove-pidfile"

check filesystem rootfs
  with path /
  if space usage > 80% then exec /app/script/free_storage
